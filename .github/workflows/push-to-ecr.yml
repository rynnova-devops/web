name: Deploy to AWS

on:
  push:
    branches:
      - dev
      - main
      - prd

jobs:
  set-vars:
    name: Set environment variables
    runs-on: ubuntu-latest
    outputs:
      iam_role_arn: ${{ steps.step1.outputs.iam_role_arn }}
      account_id: ${{ steps.step2.outputs.account_id }}
      branch: ${{ steps.step3.outputs.branch }}
    steps:
      - id: step1
        run: |
          if [ ${{ github.ref_name }} == "prd" ]; then
            echo "iam_role_arn=arn:aws:iam::174402182021:role/ECR-GHA" >> $GITHUB_OUTPUT
          else
            echo "iam_role_arn=arn:aws:iam::174402182021:role/ECR-GHA" >> $GITHUB_OUTPUT
          fi
      - id: step2
        run: |
          if [ ${{ github.ref_name }} == "prd" ]; then
            echo "account_id=174402182021" >> $GITHUB_OUTPUT
          else
            echo "account_id=174402182021" >> $GITHUB_OUTPUT
          fi
      - id: step3
        run: |
          echo "branch=$(echo ${{ github.ref_name }} | cut -d '-' -f 1)" >> $GITHUB_OUTPUT

  build:
    needs: [set-vars]
    runs-on: ubuntu-latest
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: npm install
      - name: Build Vue namespace
        run: npm run build
      - name: Archive dist folder
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist

  publish-to-ecr:
    runs-on: ubuntu-latest
    needs: [build, set-vars]
    permissions:
      contents: read
      id-token: write
    environment: ${{ github.ref_name }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download dist folder
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: ./dist
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # role-skip-session-tagging: true
          role-to-assume: ${{ needs.set-vars.outputs.iam_role_arn }}
          # role-session-name: gh-actions
          aws-region: ap-southeast-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Setup image tag
        run: |
          echo "IMAGE_TAG=${GITHUB_SHA::8}" >> "${GITHUB_ENV}"
        shell: bash
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Publish to ECR
        uses: docker/build-push-action@v3
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: "web"
        with:
          file: ./Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}:${{ env.IMAGE_TAG }}
          context: .